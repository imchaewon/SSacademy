import java.util.ArrayList;


/**
 * 교사 뷰
 * @author 유건우, 전수희
 * 교사 계정이 이용 가능한 모든 메뉴를 출력해주는 메소드이다.
 */
public class TeacherView {

   /**
    * 교사 계정의 메인화면을 출력하는 메소드이다.
    */
   public void mainMenu() {
      
      //교사 메인
      System.out.println("1. 강의스케줄 조회");
      System.out.println("2. 배점 및 시험 정보 관리");
      System.out.println("3. 성적 정보 관리");
      System.out.println("4. 출결 조회");
      System.out.println("5. 교사 평가 조회");
      System.out.println("0. 로그아웃");
      System.out.print("선택(번호) : ");
      
      
   }
   
   /**
    * 교사가 담당하고 있는 과정에 대한 정보를 출력하는 메소드이다.
    * 개설과정번호, 과정명, 과정시작날짜, 과정종료날짜, 강의실명, 강의진행여부 등을 출력한다.
    * @param teacherCourses 교사의 담당 과정에 대한 정보가 저장되어 있는 배열이다.
    */
   //로그인 한 교사의 담당 개설 과정 목록
   public void teacherCourseList(ArrayList<TeacherCourseDTO> teacherCourses) {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("번호\t\t\t과정명\t\t\t\t시작날짜\t종료날짜\t강의실\t\t강의진행여부");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      for (TeacherCourseDTO tccdto : teacherCourses) {
         System.out.printf("%s\t%s\t%s\t%s\t%s\t\t%s\n"
               , tccdto.getOpenProcessSeq()
               , tccdto.getOpenProcessStartDate()
               , tccdto.getOpenProcessEndDate()
               , tccdto.getLectureRoom()
               , tccdto.getLectureStatus()
         );
      }
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
   }
   
   
   
   
   
   
   
   
   
   
   
   
   /**
    * 강의 스케줄 조회를 위한 메뉴를 출력하는 메소드이다.
    */
   //강의스케줄 조회 -----------------------------------------------------------------------------------
   // 개설 과정 선택 후 개설 과목 조회/교육생 조회 고르기
   public void choosescheduleMenu() {
      
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 개설 과목 목록 조회");
      System.out.println("2. 교육생 목록 조회");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");
   }

   
   /**
    * 특정 개설 과정의 개설 과목에 대한 정보를 출력해주는 메소드이다.
    * 개설과목번호, 과목명, 과목시작날짜, 과목종료날짜, 교재를 출력한다.
    * @param openSubjects 개설 과목에 대한 정보를 담고 있는 배열이다.
    */
   //특정 개설 과정의 개설 과목 목록 출력
   public void openSubjectList(ArrayList<OpenSubjectDTO> openSubjects) {
       
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
        System.out.println("개설과목번호\t과목명\t과목시작날짜\t과목종료날짜\t교재");
        System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        for (OpenSubjectDTO osdto : openSubjects) {
           System.out.printf("%s\t%s\t%s\t%s\t%s\n"
                 , osdto.getSeq()
                 , osdto.getTitle()
                 , osdto.getStartDate()
                 , osdto.getEndDate()
                 , osdto.getBook()
           );
        }      
   }
   
   
   /**
    * 특정 개설 과정의 교육생 목록을 출력하는 메소드이다.
    * 수강번호, 이름, 주민번호뒷자리, 전화번호, 등록날짜, 수료여부를 출력한다.
    * @param students 학생에 대한 정보를 담고 있는 배열이다.
    */
   //특정 개설 과정의 교육생 목록 출력
   public void studentList(ArrayList<StudentDTO> students) {
      
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
        System.out.println("수강번호\t이름\t주민번호뒷자리\t전화번호\t등록날짜\t수료여부");
        System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
        for (StudentDTO sdto : students) {
           System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\n"
                 , sdto.getSeq()
                 , sdto.getName()
                 , sdto.getRegidentRegistrationNumber()
                 , sdto.getPhone()
                 , sdto.getRegdate()
                 , sdto.getFinishStatus()
           );
        }
        System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      
   }
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   //배점 및 시험 정보 관리 ---------------------------------------------------------------------------
   
   
   /**
    * 특정 개설 과정의 개설 과목의 시험 정보를 출력하는 메소드이다.
    * @param examInformation 시험에 관련된 정보를 포함하고 있는 배열이다.
    */
   //특정 개설 과정의 개설 과목의 시험 정보 출력
   public void examInformation(ArrayList<ExamDTO> examInformation) {
      // TODO Auto-generated method stub
      
   }
   
   
   /**
    * 배점 및 시험 정보 관리를 위한 메뉴를 출력하는 메소드이다.
    */
   //배점 및 시험 정보 등록/수정/삭제 고르기
   public void chooseExamInformationMenu() {
      
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 배점 및 시험 정보 등록");
      System.out.println("2. 배점 및 시험 정보 수정");
      System.out.println("3. 배점 및 시험 정보 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");
      
   }
   
   /**
    * "배점 및 시험 정보 등록" 메뉴의 헤더를 출력해주는 메소드이다.
    */
   //배점 및 시험 정보 등록 메뉴 헤더
   public void addExamInformationMenuHedaer() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("배점 및 시험 정보 등록");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
            
   }
   
   /**
    * "배점 및 시험 정보 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //배점 및 시험 정보 수정 메뉴 헤더
   public void updateExamInformationMenuHedaer() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("배점 및 시험 정보 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
               
   }
   
   /**
    * 배점 및 시험 정보 수정을 위한 메뉴를 출력하는 메소드이다.
    */
   //배점 및 시험 정보 수정할 것 고르기
   public void chooseUpdateExamInforamtionMenu() {
      
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 필기 배점 수정");
      System.out.println("2. 실기 배점 수정");
      System.out.println("3. 출결 배점 수정");
      System.out.println("4. 시험 날짜 수정");
      System.out.println("5. 시험 문제 등록 여부 수정");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");      
   }
   
   /**
    * "필기 배점 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 배점 수정 메뉴 헤더
   public void updateHandwritingPointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 배점 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
               
   }
   
   /**
    * "실기 배점 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 배점 수정 메뉴 헤더
   public void updatePracticalPointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 배점 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
               
   }
   
   /**
    * "출결 배점 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 배점 수정 메뉴 헤더
   public void updateAttendancePointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 배점 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   
   /**
    * "시험 날짜 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //시험 날짜 수정 메뉴 헤더
   public void updateExamDateMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("시험 날짜 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   
   /**
    * "시험 문제 등록 여부 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //시험 문제 등록 여부 수정 메뉴 헤더
   public void updateExamFileStatusMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("시험 문제 등록 여부 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   
   /**
    * "배점 및 시험 정보 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //배점 및 시험 정보 삭제 메뉴 헤더
   public void deleteExamInformationMenuHedaer() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("배점 및 시험 정보 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   
   /**
    * 배점 및 시험 정보 삭제를 위한 메뉴를 출력하는 메소드이다.
    */
   //배점 및 시험 정보 삭제할 것 고르기
   public void chooseDeleteExamInforamtionMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 필기 배점 삭제");
      System.out.println("2. 실기 배점 삭제");
      System.out.println("3. 출결 배점 삭제");
      System.out.println("4. 시험 날짜 삭제");
      System.out.println("5. 시험 문제 등록 여부 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");            
   }
   
   /**
    * "필기 배점 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 배점 삭제 메뉴 헤더
   public void deleteHandwritingPointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 배점 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
               
   }
   
   /**
    * "실기 배점 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 배점 삭제 메뉴 헤더
   public void deletePracticalPointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 배점 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
               
   }
   
   /**
    * "출결 배점 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 배점 삭제 메뉴 헤더
   public void deleteAttendancePointMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 배점 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   
   /**
    * "시험 날짜 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //시험 날짜 삭제 메뉴 헤더
   public void deleteExamDateMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("시험 날짜 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   
   /**
    * "시험 문제 등록 여부 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //시험 문제 등록 여부 삭제 메뉴 헤더
   public void deleteExamFileStatusMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("시험 문제 등록 여부 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }

   


   


   


   

   
   
   
   
   //성적 조회 -------------------------------------------------------------------------------
   
   /**
    * 특정 개설 과정의 특정 개설 과목의 교육생 성적 목록 출력하는 메소드이다.
    * 교육생번호, 이름, 전화번호, 수료또는중도탈락날짜, 수료또는중도탈락여부, 필기점수, 실기점수, 출결점수를 출력한다. 
    * @param students 교육생이 수강하고 있는 과정의 성적에 관한 정보를 담고 있는 배열이다.
    */
   //특정 개설 과정의 특정 개설 과목의 교육생 성적 목록 출력
   public void studentScoreList(ArrayList<ScoreDTO> students) {

      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("번호\t이름\t전화번호\t수료또는중도탈락날짜\t수료또는중도탈락여부\t필기점수\t실기점수\t출결점수");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

      for (ScoreDTO op : students) {
         
         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
               op.getStudentSeq(),
               op.getStudentName(),
               op.getPhone() == null ? "-" : op.getPhone(),
               op.getFinishDate() == null ? "-" : op.getFinishDate(),
               op.getFinishStatus(),
               op.getHandwritingScore() == null ? "-" : op.getHandwritingScore(),
               op.getPracticalScore() == null ? "-" : op.getPracticalScore(),
               op.getAttendanceScore() == null ? "-" : op.getAttendanceScore());
      }
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }

   /**
    * 특정 개설 과정의 특정 개설 과목의 특정 교육생 성적 조회 목록을 출력하는 메소드이다.
    * 교육생 이름, 전화번호, 과목명, 과목시작일, 과목종료일, 수강또는중도탈락여부, 필기배점, 실기배점, 출결배점, 필기점수, 실기점수, 출결점수를 출력한다.
    * @param score 교육생이 수강하고 있는 과목의 성적에 관한 정보를 담고 있는 배열이다.
    */
   //특정 개설 과정의 특정 개설 과목의 특정 교육생 성적 출력
   public void score(ArrayList<ScoreDTO> score) {

      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("이름\t전화번호\t과목명\t과목시작일\t과목종료일\t수강또는중도탈락여부\t필기배점\t실기배점\t출결배점\t필기점수\t실기점수\t출결점수");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

      for (ScoreDTO op : score) {
         
         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
               op.getStudentName(),
               op.getPhone() == null ? "-" : op.getPhone(),
               op.getTitle(),
               op.getStartdate(),
               op.getEnddate(),
               op.getFinishStatus(),
               op.getHandwritingPoint(),
               op.getPracticalPoint(),
               op.getAttendancePoint(),
               op.getHandwritingScore() == null ? "-" : op.getHandwritingScore(),
               op.getPracticalScore() == null ? "-" : op.getPracticalScore(),
               op.getAttendanceScore() == null ? "-" : op.getAttendanceScore());
      }
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
      
   }
   
   /**
    * 담당 과정의 전체 과목별 성적 조회 목록을 출력하는 메소드이다.
    * 과목번호, 과정명, 과정시작일, 과정종료일, 강의실, 과목명, 과목시작일, 과목종료일, 교재명, 필기배점, 실기배점, 출결배점을 츨력한다.
    * @param openSubjects 교육생이 수강하고 있는 과정의 과목의 배점에 관한 정보를 담고 있는 배열이다.
    */
   //담당 과정의 전체 과목별 성적 조회
   public void listAllScoreBySubject(ArrayList<ScoreDTO> openSubjects) {

      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("과목번호\t과정명\t과정시작일\t과정종료일\t강의실\t과목명\t과목시작일\t과목종료일\t교재명\t필기배점\t실기배점\t출결배점");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

      for (ScoreDTO op : openSubjects) {
         
         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
               op.getOpenSubject(),
               op.getOpenProcessName(),
               op.getpStartdate(),
               op.getpEnddate(),
               op.getLectureRoom(),
               op.getTitle(),
               op.getStartdate(),
               op.getEnddate(),
               op.getBookName(),
               op.getHandwritingPoint(),
               op.getPracticalPoint(),
               op.getAttendancePoint());
      }
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      
   }
   


   /**
    * 필기/실기/출결 점수를 관리하기 위한 메뉴를 출력하는 메소드이다.
    */
   //필기/실기/출결 점수 관리 고르기
   public void chooseScoreMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 필기 점수 관리");
      System.out.println("2. 실기 점수 관리");
      System.out.println("3. 출결 점수 관리");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");            
   }
   
   /**
    * "필기 점수 관리" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 점수 관리 헤더
   public void handwritingScoreManagementHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 점수 관리");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * 필기 점수를 등록/수정/삭제하기 위한 메뉴를 출력하는 메소드이다.
    */
   //필기 점수 등록/수정/삭제 고르기
   public void chooseHandwritingScoreMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 필기 점수 등록");
      System.out.println("2. 필기 점수 수정");
      System.out.println("3. 필기 점수 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");         
   }
   
   /**
    * "필기 점수 등록" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 점수 등록 헤더
   public void addHandwritingScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 점수 등록");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * "필기 점수 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 점수 수정 헤더
   public void updateHandwritingScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 점수 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }

   /**
    * "필기 점수 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //필기 점수 삭제 헤더
   public void deleteHandwritingScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("필기 점수 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   
   /**
    * "실기 점수 관리" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 점수 관리 헤더
   public void practicalScoreManagementHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 점수 관리");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * 실기 점수를 등록/수정/삭제하기 위한 메뉴를 출력하는 메소드이다.
    */
   //실기 점수 등록/수정/삭제 고르기
   public void choosePracticalScoreMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 실기 점수 등록");
      System.out.println("2. 실기 점수 수정");
      System.out.println("3. 실기 점수 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");         
   }
   
   /**
    * "실기 점수 등록" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 점수 등록 헤더
   public void addPracticalScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 점수 등록");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * "실기 점수 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 점수 수정 헤더
   public void updatePracticalScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 점수 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   /**
    * "실기 점수 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //실기 점수 삭제 헤더
   public void deletePracticalScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("실기 점수 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   
   
   /**
    * "출결 점수 관리" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 점수 관리 헤더
   public void attendanceScoreManagementHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 점수 관리");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * 출결 점수를 등록/수정/삭제하기위한 메뉴를 출력하는 메소드이다.
    */
   //출결 점수 등록/수정/삭제 고르기
   public void chooseAttendanceScoreMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 출결 점수 등록");
      System.out.println("2. 출결 점수 수정");
      System.out.println("3. 출결 점수 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");         
   }
   
   /**
    * "출결 점수 등록" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 점수 등록 헤더
   public void addAttendanceScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 점수 등록");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
   }
   
   /**
    * "출결 점수 수정" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 점수 수정 헤더
   public void updateAttendanceScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 점수 수정");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   /**
    * "출결 점수 삭제" 메뉴의 헤더를 출력하는 메소드이다.
    */
   //출결 점수 삭제 헤더
   public void deleteAttendanceScoreMenuHeader() {
      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("출결 점수 삭제");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

   }

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   //출결 조회 ----------------------------------------------------------------------------------
   
   /**
    * 특정 과정의 출결을 조회하기 위해 선택할 과정에 대한 정보를 출력 하는 메소드이다.
    * 과정번호, 과정명, 시작날짜, 종료날짜, 강의실번호, 수료여부를 출력한다.
    * @param openprocess 과정의 모든 정보를 담고있는 배열이다.
    */
   // 출결 조회 헤더
   public void selectAttendanceHeader(ArrayList<OpenProcessDTO> openprocess) {
      System.out.println(
            "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("[과정번호]\t[과정명]\t[시작 날짜]\t[종료 날짜]\t[강의실번호]\t[수료여부]");
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");
      for (OpenProcessDTO dto : openprocess) {

         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\n", dto.getSeq(), dto.getTitle(), dto.getStartDate(),
               dto.getEndDate(), dto.getLectureRoom(), dto.getExistStatus());
      }
   }
   
   /**
    * 특정 과정의 모든 출결 조회 목록을 출력하는 메소드이다.
    * 과정명, 출결일, 출결시간, 출결상태를 출력한다.
    * @param result 출결과 관련된 정보를 담고있는 배열이다.
    */
   // 전체 조회
   public void allAttendanceList(ArrayList<AttendanceDTO> result) {

      System.out.println("-------------------------------------------------------------------------------------");
      System.out.println("전체 조회(1번 선택)");
      System.out.println("-------------------------------------------------------------------------------------");
      System.out.println("[과정명]\t[출결일]\t[출결시간]\t[출결상태]");
      System.out.println("-------------------------------------------------------------------------------------");

      int n = 0;
      for (AttendanceDTO atdto : result) {

         if (n < result.size() - 4) {
            if (atdto.getAttendanceTime().equals(result.get(n + 3).getAttendanceTime())
                  && !atdto.getAttendanceTime().equals(result.get(n + 4).getAttendanceTime())) {
               result.get(n + 1).setAttendanceStatus("외출퇴실");
               result.get(n + 2).setAttendanceStatus("외출입실");
            }

         }

         if (result.get(n).getOpenProcessName() == null) {
            result.get(n).setOpenProcessName(result.get(n - 1).getOpenProcessName());
            ;
         }
         if (result.get(n).getAttendanceTime2() == null) {
            result.get(n).setAttendanceTime2("휴일");
         }

         System.out.printf("%s\t%s\t%s\t%s\n", atdto.getOpenProcessName(), atdto.getAttendanceTime(),
               atdto.getAttendanceTime2(), atdto.getAttendanceStatus());

         n++;
      }

      System.out.println(
            "-───────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   /**
    * 특정과정의 특정 기간(월별)로 출결이 출력하는 메소드이다.
    * 시간, 출결상태를 출력한다.
    * @param result 출결과 관련된 모든 정보를 담고 있는 배열이다.
    */
   // 월별 조회
   public void chooseMonthList(ArrayList<AttendanceDTO> result) {

      System.out.println("-------------------------------------------------------------------------------------");
      System.out.println("시간\t출결상태");
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");

      for (AttendanceDTO atdto : result) {
         System.out.printf("%s\t%s\n", atdto.getAttendanceTime(), atdto.getAttendanceStatus());
      }
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   /**
    * 특정 개설 과정의 특정 수강의 출결 목록 출력하는 메소드이다.
    * 출결번호, 교육생번호, 출결시간을 출력한다.
    * @param attendances 출결과 관련된 정보를 담고있는 배열이다.
    */
   // 특정 개설 과정의 특정 수강의 출결 목록 출력
   public void attendanceList(ArrayList<AttendanceDTO> attendances) {
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println("[출결번호]\t[교육생번호]\t[출결 시간]");

      for (AttendanceDTO dto : attendances) {
         System.out.printf("%s\t%s\t%s\n", dto.getSeq(), dto.getAttendanceTime(), dto.getAttendanceStatus());

      }

      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");

   }
   
   /**
    * 기간 검색 여부를 출력하는 메소드이다.
    */
   // 기간 검색 여부 고르기
   public void chooseAttendanceMenu() {
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println();
      System.out.println("1. 기간 검색");
      System.out.println("0. 뒤로가기");
      System.out.println();
      System.out.println(
            "───────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");
   }
   
   
   /**
    * "기간 검색" 메뉴의 헤더를 출력하는 메소드이다.
    */
   // 기간 검색 헤더
   public void searchPeriodHeader() {
      // TODO Auto-generated method stub

   }

   
   
   
   
   
   
   
   
   
   
   
   
   //교사 평가 -----------------------------------------------------------------------------------
   /**
    * 교사가 담당하는 개설 과정들의 평가 목록을 출력하는 메소드이다.
    * 번호, 과정명, 과정시작일, 과정종료일, 수강인원수, 평가인원수, 과정수료여부, 이행점수, 이해점수, 소통점수, 유익성점수, 만족도 점수를 출력한다.
    * @param openProcesses 교사가 담당하는 개설 과정들의 평가에 대한 모든 정보를 담고있는 배열이다.
    */
   //교사 평가 -----------------------------------------------------------------------------------
   //교사가 담당하는 개설 과정들의 평가 목록
   public void evaluatedOpenProcessList(ArrayList<OpenProcessEvaluationDTO> openProcesses) {

      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("번호\t과정명\t과정시작일\t과정종료일\t수강인원수\t평가인원수\t과정수료여부\t이행점수\t이해점수\t소통점수\t유익성점수\t만족도점수");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

      for (OpenProcessEvaluationDTO op : openProcesses) {
         
         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
               op.getSeq(),
               op.getTitle(),
               op.getStartDate(),
               op.getEndDate(),
               op.getPersonnel(),
               op.getEvaluationPersonnel(),
               op.getFinishStatus(),
               op.getProcessScore(),
               op.getUnderstandScore(),
               op.getCommunicationScore(),
               op.getUsefulScore(),
               op.getSatisfactionScore());
      }
      
   }

   /**
    * 특정 개설 과정의 모든 교육생의 평가 목록을 출력하는 메소드이다.
    * 수강번호, 교육생명, 이행점수, 이해점수, 소통점수, 유익성점수, 만족도점수를 출력한다.
    * @param evaluationScores 개설 과정의 모든 교육생의 평가에 관련된 정보를 담고있는 배열이다.
    */
   //특정 개설 과정의 모든 교육생의 평가 목록
   public void evaluatedOpenProcess(ArrayList<EvaluationScoreDTO> evaluationScores) {

      System.out.println("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
      System.out.println("수강번호\t이름\t이행점수\t이해점수\t소통점수\t유익성점수\t만족도점수");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");

      for (EvaluationScoreDTO op : evaluationScores) {
         
         System.out.printf("%s\t%s\t%s\t%s\t%s\t%s\t%s\n",
               op.getRegistrationSeq(),
               op.getStudentName(),
               op.getProcessScore(),
               op.getUnderstandScore(),
               op.getCommunicationScore(),
               op.getUsefulScore(),
               op.getSatisfactionScore());
      }
      
   }

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   //공통 ---------------------------------------------------------------------------------------
   
   /**
    * 교사 뷰의 등록 확인 선택 메뉴를 출력하는 메소드이다.
    */
   //등록 확인
   public void addCheckMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println("1. 등록");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");      
   }
   
   /**
    * 교사 뷰의 수정 확인 선택 메뉴를 출력하는 메소드이다.
    */
   //수정 확인
   public void updateCheckMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println("1. 수정");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");      
   }
   
   /**
    * 교사 뷰의 삭제 확인 선택 메뉴를 출력하는 메소드이다.
    */
   //삭제 확인
   public void deleteCheckMenu() {
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.println("1. 삭제");
      System.out.println();
      System.out.println("0. 뒤로가기");
      System.out.println("──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────");
      System.out.print("선택(번호) : ");      
   }
   
   /**
    * 교사 뷰의 등록 결과를 출력하는 메소드이다.
    * 0일 시 등록 실패, 1일 시 등록 성공 문구를 출력한다.
    * @param result 0 또는 1이 저장되어 있는 변수
    */
   public void addResult(int result) {
      if (result == 1) {
         System.out.println("<<등록되었습니다.>>");
      } else {
         System.out.println("<<등록에 실패했습니다.>>");
      }
   }


   /**
    * 교사 뷰의 수정 결과를 출력하는 메소드이다.
    * 0일 시 수정 실패, 1일 시 수정 성공 문구를 출력한다.
    * @param result 0 또는 1이 저장되어 있는 변수
    */
   public void updateResult(int result) {
      if (result == 1) {
         System.out.println("<<수정되었습니다.>>");
      } else {
         System.out.println("<<수정에 실패했습니다.>>");
      }      
   }

   
   /**
    * 교사 뷰의 삭제 결과를 출력하는 메소드이다.
    * 0일 시 삭제 실패, 1일 시 삭제 성공 문구를 출력한다.
    * @param result 0 또는 1이 저장되어 있는 변수
    */
   public void deleteResult(int result) {
      if (result == 1) {
         System.out.println("<<삭제되었습니다.>>");
      } else {
         System.out.println("<<삭제에 실패했습니다.>>");
      }      
   }

   
   private int checkTitle(String str, int length) {

      int result = length;
      for (int i = 0; i < str.length(); i++) {
         char c1 = str.charAt(i);
         if (c1 >= '가' && c1 <= '힣') {
            result--;
         }
      }
      return result;

   }

}